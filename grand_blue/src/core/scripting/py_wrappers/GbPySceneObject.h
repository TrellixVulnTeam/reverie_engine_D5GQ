/////////////////////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////////////////////

#ifndef GB_PY_SCENE_OBJECT_H
#define GB_PY_SCENE_OBJECT_H

// External
#include "../GbPythonWrapper.h"

namespace Gb {
/////////////////////////////////////////////////////////////////////////////////////////////
// Forward Declarations
/////////////////////////////////////////////////////////////////////////////////////////////
class SceneObject;
class Scene;

/////////////////////////////////////////////////////////////////////////////////////////////
// Class definitions
/////////////////////////////////////////////////////////////////////////////////////////////

/// @brief Class to encapsulate initialization of SceneObject pybind wrapper
class PySceneObject{
public:

    /// @brief Factory function for initialization from name
    /// @note See: https://stackoverflow.com/questions/62309487/pybind11-init-with-lambda
    static std::shared_ptr<SceneObject> Create(Scene* scene);

    static std::shared_ptr<SceneObject> Create(const char* uuidStr);

    /// @brief Wrap a behavior for Python
    static void PyInitialize(py::module_& m);

};

/////////////////////////////////////////////////////////////////////////////////////////////
} // End namespaces

#endif