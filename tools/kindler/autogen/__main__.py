import sys
import os
from aggregator import Aggregator
from generators.message_generator import MessageGenerator
from generators.enum_generator import EnumGenerator
from system.diagnostics import is_venv

assert is_venv(), "Deployment tools should only be run from a virtual environment"

print("Running code autogeneration~")

# See if autogenerated path has been passed in, otherwise use dummy path
target_name = "tmp"
autogenerated_code_path = f"{os.path.dirname(os.path.abspath(__file__))}/tmp"
if len(sys.argv) > 2:
    target_name = sys.argv[1]
    autogenerated_code_path = sys.argv[2]
else:
    # Using dummy path, so clear auto-gen version
    schema_file = f"{autogenerated_code_path}/ag_schema_version.yaml"
    # if os.path.exists(schema_file):
    #     os.remove(f"{autogenerated_code_path}/ag_schema_version.yaml")

print('Number of arguments:', len(sys.argv), 'arguments.')
print('Argument List:', str(sys.argv))

aggregator = Aggregator(autogenerated_code_path)
if(target_name == "enums"):
    # Generating enums
    aggregator.add_generator(EnumGenerator())
else:
    aggregator.add_generator(MessageGenerator())
aggregator.regenerate()
