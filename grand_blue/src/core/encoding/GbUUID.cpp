///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "GbUUID.h"

// Standard Includes

// External

// Project

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Namespace Definitions
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Gb {

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Class Implementations
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Uuid::Uuid(const QUuid & uuid):
    QUuid(uuid)
{
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Uuid::Uuid(bool generate):
    QUuid()
{
    if (generate) {
        *this = std::move(QUuid::createUuid());
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Uuid::~Uuid()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Uuid& Uuid::operator=(const QUuid & uuid)
{
    if (&uuid == this) return *this;

    QUuid::operator=(uuid);

    return *this;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
QString Uuid::asString() const
{
    return QUuid::toString();
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
QString Uuid::createUniqueName(const QString & prefix) const
{
    QString uuidStr = asString();
    return prefix + uuidStr.replace("-", "_").replace("{", "").replace("}", "");
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//const QString & Uuid::toString()
//{
//    if (m_string.isNull()) {
//        m_string = QUuid::toString();
//    }
//    return m_string;
//}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // end namespacing
