#ifndef TEST_GB_PARALLELIZATION_H
#define TEST_GB_PARALLELIZATION_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "test_base.h"

#include "../../grand_blue/src/core/utils/GbParallelization.h"

#include <QMutex>
#include <QMutexLocker>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Tests
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TestParallelization : public TestBase
{
    Q_OBJECT

public:

    TestParallelization();
    ~TestParallelization() {}

private slots:

    void parallelLoop();

private:
    Gb::ThreadPool m_pool;
    static QMutex m_mutex;
};


#endif