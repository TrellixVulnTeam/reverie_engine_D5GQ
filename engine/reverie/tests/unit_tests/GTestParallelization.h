#ifndef TEST_GB_PARALLELIZATION_H
#define TEST_GB_PARALLELIZATION_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "../GTest.h"
#include <core/threading/GParallelLoop.h>

#include <QMutex>
#include <QMutexLocker>

namespace rev{
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Tests
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class ParallelizationTest : public Test
{
public:

    ParallelizationTest();
    ~ParallelizationTest() {}

    virtual void perform();

private:
    rev::ThreadPool m_pool;
    static QMutex m_mutex;
};


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End namespaces
}


#endif