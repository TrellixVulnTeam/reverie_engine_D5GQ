/////////////////////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////////////////////

#ifndef GB_LOG_EVENT_H
#define GB_LOG_EVENT_H

// Qt
#include <QString>

// Internal
#include "GbEvent.h"
#include "../GbLogger.h"

namespace Gb {
/////////////////////////////////////////////////////////////////////////////////////////////
// Forward Declarations
/////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////
// Class definitions
/////////////////////////////////////////////////////////////////////////////////////////////

class LogEvent : public Event<kLogEvent> {
public:
    LogEvent(const QString& namespaceName,
        const QString& logMessage,
        const QString& threadId = QString(),
        LogLevel messageLevel = LogLevel::Info);
    ~LogEvent();

    const LogLevel& getLogLevel() const { return m_logLevel; }
    const QString& getNamespaceName() const { return m_namespaceName; }
    const QString& getLogMessage() const { return m_logMessage; }

protected:

    LogLevel m_logLevel;

    QString m_namespaceName;
    QString m_logMessage;
};

/////////////////////////////////////////////////////////////////////////////////////////////
} // End namespaces

#endif