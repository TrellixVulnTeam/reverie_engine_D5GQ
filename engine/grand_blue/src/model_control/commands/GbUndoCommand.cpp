#include "GbUndoCommand.h"

#include "GbActionManager.h"
#include "../../core/GbCoreEngine.h"

namespace Gb {

/////////////////////////////////////////////////////////////////////////////////////////////
UndoCommand::UndoCommand(CoreEngine* core, const QString & text, QUndoCommand * parent):
    QUndoCommand(text, parent),
    m_engine(core)
{
}
/////////////////////////////////////////////////////////////////////////////////////////////
UndoCommand::UndoCommand(CoreEngine* core, QUndoCommand * parent):
    QUndoCommand(parent),
    m_engine(core)
{
}
/////////////////////////////////////////////////////////////////////////////////////////////
Gb::UndoCommand::UndoCommand(CoreEngine* core, const QString & text, std::function<void()> redo, std::function<void()> undo, QUndoCommand * parent) :
    QUndoCommand(text, parent),
    m_engine(core)
{
}
/////////////////////////////////////////////////////////////////////////////////////////////
Gb::UndoCommand::UndoCommand(CoreEngine* core, std::function<void()> redo, std::function<void()> undo, QUndoCommand * parent):
    QUndoCommand(parent),
    m_engine(core)
{
}
/////////////////////////////////////////////////////////////////////////////////////////////
Gb::UndoCommand::~UndoCommand()
{
}
/////////////////////////////////////////////////////////////////////////////////////////////
void UndoCommand::perform()
{
    m_engine->actionManager()->performAction(this);
}

/////////////////////////////////////////////////////////////////////////////////////////////
} // End namespaces