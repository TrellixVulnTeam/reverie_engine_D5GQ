#include "GBlueprint.h"

#include <core/scene/GSceneObject.h>

namespace rev{

///////////////////////////////////////////////////////////////////////////////////////////////////
Blueprint::Blueprint()
{
}
///////////////////////////////////////////////////////////////////////////////////////////////////
Blueprint::Blueprint(const SceneObject & sceneObject):
    Nameable(sceneObject.getName()),
    m_soJson(sceneObject.asJson().toObject())
{
}
///////////////////////////////////////////////////////////////////////////////////////////////////
Blueprint::~Blueprint()
{
}
///////////////////////////////////////////////////////////////////////////////////////////////////
Blueprint & Blueprint::operator=(const Blueprint & other)
{
    m_name = other.m_name;
    m_soJson = other.m_soJson;
    return *this;
}
///////////////////////////////////////////////////////////////////////////////////////////////////
QJsonValue Blueprint::asJson(const SerializationContext & context) const
{
    QJsonObject json;
    json.insert("so", m_soJson);
    json.insert("name", m_name.c_str());
    return json;
}
///////////////////////////////////////////////////////////////////////////////////////////////////
void Blueprint::loadFromJson(const QJsonValue & json, const SerializationContext & context)
{
    QJsonObject object = json.toObject();
    m_name = object["name"].toString();
    m_soJson = object["so"].toObject();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// End namespaces        
}